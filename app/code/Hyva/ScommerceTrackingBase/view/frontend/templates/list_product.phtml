<?php
/** @var $block Magento\Framework\View\Element\Template */
/** @var $viewModel Scommerce\TrackingBase\ViewModel\ListProduct */
$viewModel = $block->getData('view_model');

$_mode = $block->getMode();
$viewModel->setMode($_mode);
$viewModel->setBlock($block);

$helper = $viewModel->getHelper();
if (!$helper->isEnabled() || !$helper->isEnhancedEcommerceEnabled() || $helper->isCategoryAjaxEnabled()) return;

$_SIOSEnabled = $helper->isSIOSEnabled();
$_PICText = $helper->getPICText();
$cats = $viewModel->getRemarketingCategories();
?>

<script <?= $viewModel->getNonce(); ?>>
    let intCtr2 = 0;
    let lastCtr = 0;
    let documentReady = function (fn) {
        if (document.readyState !== 'loading') {
            fn();
        } else {
            document.addEventListener('DOMContentLoaded', fn);
        }
    };
    let windowReady = function (fn) {
        if (window.readyState !== 'loading') {
            fn();
        } else {
            window.addEventListener('DOMContentLoaded', fn);
        }
    };
    let offset = function (el) {
        box = el.getBoundingClientRect();
        docElem = document.documentElement;
        return {
            top: box.top + window.pageYOffset - docElem.clientTop,
            left: box.left + window.pageXOffset - docElem.clientLeft
        };
    };
    let scrollLeft = function (el, value) {
        if (value === undefined) {
            return el.pageXOffset;
        } else {
            if (el === window || el.nodeType === 9) {
                el.scrollTo(value, el.pageYOffset);
            } else {
                el.pageXOffset = value;
            }
        }
    };
    let scrollTop = function (el, value) {
        if (value === undefined) {
            return el.pageYOffset;
        } else {
            if (el === window || el.nodeType === 9) {
                el.scrollTo(el.pageXOffset, value);
            } else {
                el.pageYOffset = value;
            }
        }
    };

    let isElementInViewport = function (element) {
        const rect = element.getBoundingClientRect();
        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);
        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);

        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);
        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);

        return (vertInView && horInView);
    };

    window.scTrackingContainer.setData('category', '<?php echo $block->escapeJs($viewModel->getCategoryName()) ?>');
    window.scTrackingContainer.setData('category_full', '<?php echo $block->escapeJs($cats['full']) ?>');
    window.scTrackingContainer.setData('category_plain', '<?php echo $block->escapeJs($cats['plain']) ?>');

    let data = <?php echo json_encode($viewModel->getProductsData())?>;
    <?php if (($_SIOSEnabled) && strlen($_PICText)):
    $productItemClass = $_PICText;
    if (strlen($productItemClass) == 0) $productItemClass = "div.products ol.product-items li.product-item";
    ?>
    window.scTrackingContainer.setImpressionListData(data, true);

    documentReady(function () {
        let productItemsArray = Array.from(document.querySelectorAll('<?php echo $productItemClass?>'));
        productItemsArray.forEach(element => {
            element.classList.add('in-view');
        });
    });

    let updateImpressions = function() {
        notSentItems = document.querySelectorAll('.in-view:not(.impressionSent)');
        sentItems = document.querySelectorAll('.impressionSent');
        products = window.scTrackingContainer.getData('productList');
        scrollImpressions = [];
        for (let i = 0; i < notSentItems.length; i++) {
            if (isElementInViewport(notSentItems[i])) {
                product = products[sentItems.length + i];
                let impression = {
                    'id': product.id,
                    'name': product.name,
                    'price': product.price,
                    'category': product.category,
                    'brand': product.brand,
                    'list': product.list,
                    'position': product.position
                };
                scrollImpressions.push(impression);
                notSentItems[i].classList.add('impressionSent');
            }
        }
        if (scrollImpressions.length !== 0) {
            window.scTrackingContainer.fire('listing_scroll', scrollImpressions);
        }
    };
    window.addEventListener('scroll', updateImpressions);
    window.addEventListener('load', updateImpressions);
    <?php else: ?>
    window.scTrackingContainer.setImpressionListData(data);
    <?php endif; ?>

    window.scTrackingContainer.fire('page_ready', window.scTrackingContainer.getPageType().toLowerCase());
</script>
